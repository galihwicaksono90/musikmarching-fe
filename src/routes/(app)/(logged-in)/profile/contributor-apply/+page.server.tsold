import type { PageServerLoad, Actions } from "./$types.js";
import { fail, message, superValidate } from "sveltekit-superforms";
import { zod } from "sveltekit-superforms/adapters";
import { contributorApplySchema } from "$lib/components/form"
import { redirect } from "@sveltejs/kit";
import setCookie from "set-cookie-parser";

export const load: PageServerLoad = async ({ parent }) => {
  const data = await parent()
  const { user } = data

  if (user?.role_name !== "user" && user?.is_verified) {
    return redirect(303, '/')
  }

  if (user?.role_name === 'contributor') {
    return redirect(303, '/contributor')
  }

  const initialData = {
    full_name: data.user?.name,
  }

  return {
    form: await superValidate(initialData, zod(contributorApplySchema)),
  };
};

export const actions: Actions = {
  default: async (event) => {
    const form = await superValidate(event, zod(contributorApplySchema))
    if (!form.valid) {
      return fail(400, {
        form,
      });
    }

    try {

      const res = await event.fetch("http://localhost:8080/api/v1/account/contributor-request", {
        method: "POST",
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(form.data),
        credentials: 'include',
      })

      const data = await res.json();
      console.log({ data })

      if (data?.meta?.code !== 201) {
        return fail(400, {
          form,
        });
      }

      const cookies = res.headers.get('set-cookie');
      if (cookies) {
        const c = setCookie(cookies, {
          map: true,
          decodeValues: true,
        })
        const u = c["user-session"]
        event.cookies.set(u.name, u.value, {
          path: u.path ?? "/",
          sameSite: "lax",
          domain: u.domain,
          httpOnly: u.httpOnly,
          maxAge: u.maxAge,
          expires: u.expires,
          encode: v => v,
        })
      }
    } catch (e) {
      console.log(e);
      return fail(400, {
        form,
      });
    }

    return message(form, {
      type: 'success',
      message: 'Contributor Registered'
    })
  }
}
